h1. The Newsapps Boundary Service

The Boundary Service is a ready-to-deploy system for aggregating regional boundary data (e.g. from city or state shapefiles) and republishing that data via a RESTful JSON API.  It includes an extensive example project which demonstrates the functionality of the API using client-side code.

This project is aimed at providing a simple service for newsrooms, open-government hackers and others to centralize and build on regional GIS data.  You can see the instance we've configured for Chicago & Illinois, along with much more detailed information about the API at <a href="http://boundaries.tribapps.com">http://boundaries.tribapps.com</a>.

h2. Local setup

To bootstrap the boundary service locally you'll first need to create a virtualenv and install the requirements. Using virtualenvwrapper that looks like this:

<pre>
cd boundaryservice
mkvirtualenv boundaryservice
pip install -r requirements.txt
</pre>

You can then fast-track through database setup by running:

<pre>fab local_bootstrap</pre>

Finally, you will need to load some data. The project comes with one example dataset. To load all available datasets you should run:

<pre>./manage load_shapefiles</pre>

In the future, you can load only specific shapefiles by passing the <pre>-o</pre> flag with a comma-delimted list of Boundary Sets (whitespace in the the Boundary Set names is collapsed).  You can also reload boundary sets (clearing existing data) by passing the <pre>-c</pre> flag. Combine the two flags to clear and reload only specific datasets.

h2. Remote setup (deployment)

The Boundary Service is based on the most recent iteration of our <a href="http://blog.apps.chicagotribune.com/2010/03/08/advanced-django-project-layout/">newsapps Django project layout</a>, (which is now part of Gareth Rushgrove's <a href="https://github.com/garethr/django-project-templates/">django-project-tempalates</a>). Using this base for a project provides extensive infrastructure for doing robust deployments including isolated configuration, stable branch handling, and an extensive fabric deployment script.

There are there options for deployment:

* Our project template is tightly integrated with our <a href="http://blog.apps.chicagotribune.com/2010/02/17/our-geodjango-amazon-ec2-image-for-news-apps/">GeoDjango Amazon EC2 image</a>. So for the quickest possible deployment, you can deploy to that image and be up and running very quickly.

* Alternatively, you should be able to modify the appropriate paths in both the relevant configuration files, found in <pre>boundaryservice/configs</pre> and in <pre>fabfile.py</pre> to deploy the site to any architecture.

* If neither of those ideas appeal to you, it should be reasonably straight-forward to simply remove the "api" app from this project and migrate it into your own project template. (Note: this will make us cry.)

h2. Credits

The Boundary Service is a product of the <a href="http://blog.apps.chicagotribune.com">News Applications team</a> at the Chicago Tribune. Core development was done by <a href="http://twitter.com/onyxfish">Christopher Groskopf</a> and <a href="http://twitter.com/ryannagle">Ryan Nagle</a>.

h2. License

MIT.
